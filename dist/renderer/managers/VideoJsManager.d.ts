import Player from 'video.js/dist/types/player';
import { TrackItem, TrackManager, SyncMetrics } from '../../types/index';
import 'video.js/dist/video-js.css';
export declare class VideoJsManager implements TrackManager {
    private items;
    private currentItemIndex;
    private player;
    private containerElement;
    private basePath;
    private syncMetrics;
    private driftHistory;
    private readonly MAX_DRIFT_HISTORY;
    private readonly SYNC_TOLERANCE;
    private isTransitioning;
    private isSeeking;
    private pendingSeek;
    private lastSyncTime;
    private loadingPromise;
    private seekQueue;
    private playPromise;
    private lastSeekTime;
    private playlist;
    private playlistIndex;
    constructor(container?: HTMLElement);
    private initializeContainer;
    private initializePlayer;
    private initializePlayerAsync;
    private setupEventListeners;
    private updateMasterClock;
    private ensureVisible;
    load(items: TrackItem[], basePath?: string): Promise<void>;
    private getVideoType;
    private loadVideoAtIndex;
    private getVideoUrl;
    private checkForNextVideo;
    private transitionToNextVideo;
    sync(masterTime: number, playbackRate: number): void;
    private syncCurrentVideo;
    private updateSyncMetrics;
    play(): void;
    pause(): void;
    seek(timeMs: number): Promise<void>;
    private performSeek;
    setPlaybackRate(rate: number): void;
    getCurrentItem(): TrackItem | null;
    getElement(): HTMLElement | null;
    getSyncMetrics(): SyncMetrics;
    destroy(): void;
    getPlayer(): Player | null;
    setVolume(volume: number): void;
    getVolume(): number;
    toggleMute(): void;
    isMuted(): boolean;
    getDuration(): number;
    getCurrentTime(): number;
    isReady(): boolean;
    getBufferedPercent(): number;
}
//# sourceMappingURL=VideoJsManager.d.ts.map